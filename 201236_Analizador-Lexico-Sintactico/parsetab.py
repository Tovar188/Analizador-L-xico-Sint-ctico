
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA DOT EQUALS FOR ID INT LBRACE LE LPAREN NUMBER OUT PLUS PRINTLN RBRACE RPAREN SEMI STRING SYSTEMprogram : statementstatement : for_loop\n                 | print_statementfor_loop : FOR LPAREN assignment SEMI condition SEMI increment RPAREN LBRACE print_statement RBRACEassignment : INT ID EQUALS NUMBERcondition : ID LE NUMBERincrement : ID PLUSprint_statement : SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMI'
    
_lr_action_items = {'FOR':([0,],[5,]),'SYSTEM':([0,30,],[6,6,]),'$end':([1,2,3,4,34,35,],[0,-1,-2,-3,-4,-8,]),'LPAREN':([5,18,],[7,22,]),'DOT':([6,11,],[8,14,]),'INT':([7,],[10,]),'OUT':([8,],[11,]),'SEMI':([9,15,21,25,33,],[12,19,-5,-6,35,]),'ID':([10,12,19,],[13,16,24,]),'EQUALS':([13,],[17,]),'PRINTLN':([14,],[18,]),'LE':([16,],[20,]),'NUMBER':([17,20,29,],[21,25,31,]),'STRING':([22,],[26,]),'RPAREN':([23,28,31,],[27,-7,33,]),'PLUS':([24,26,],[28,29,]),'LBRACE':([27,],[30,]),'RBRACE':([32,35,],[34,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,],[2,]),'for_loop':([0,],[3,]),'print_statement':([0,30,],[4,32,]),'assignment':([7,],[9,]),'condition':([12,],[15,]),'increment':([19,],[23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','syntax_parser.py',7),
  ('statement -> for_loop','statement',1,'p_statement','syntax_parser.py',11),
  ('statement -> print_statement','statement',1,'p_statement','syntax_parser.py',12),
  ('for_loop -> FOR LPAREN assignment SEMI condition SEMI increment RPAREN LBRACE print_statement RBRACE','for_loop',11,'p_for_loop','syntax_parser.py',16),
  ('assignment -> INT ID EQUALS NUMBER','assignment',4,'p_assignment','syntax_parser.py',20),
  ('condition -> ID LE NUMBER','condition',3,'p_condition','syntax_parser.py',24),
  ('increment -> ID PLUS','increment',2,'p_increment','syntax_parser.py',28),
  ('print_statement -> SYSTEM DOT OUT DOT PRINTLN LPAREN STRING PLUS NUMBER RPAREN SEMI','print_statement',11,'p_print_statement','syntax_parser.py',32),
]
